import{_ as e,c as s,o,Q as t}from"./chunks/framework.24343ae2.js";const y=JSON.parse('{"title":"Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"reference/multi-options.md","lastUpdated":1679561939000}'),a={name:"reference/multi-options.md"},n=t(`<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">â€‹</a></h1><h2 id="driver" tabindex="-1">Driver <a class="header-anchor" href="#driver" aria-label="Permalink to &quot;Driver&quot;">â€‹</a></h2><p>The <code>DRIVER</code> can be <strong>umodbus</strong> or <strong>pymodbus</strong>.</p><p>The preferred driver is <strong>umodbus</strong> as it is more resilient.</p><p>The only reason why <strong>pymodbus</strong> is still available is to test the addon under Windows (it is <em>not</em> recommended to run it with pymodbus)</p><p>The <code>READ_SENSOR_BATCH_SIZE</code> option allows you to customize how many registers may be read in a single request. Devices like the USR only allows 8 registers to be read. When using mbusd this can be much higher.</p><h2 id="inverters" tabindex="-1">Inverters <a class="header-anchor" href="#inverters" aria-label="Permalink to &quot;Inverters&quot;">â€‹</a></h2><p>The <code>INVERTERS</code> option contains a list of inverters</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Currently only a single inverter is supported!</p></div><p>The following options are required per inverter:</p><ul><li><p><code>SERIAL_NR</code></p><p>The serial number of your inverter. When you start the add-on the connected serial will be displayed in the log.</p><p>The add-on will not run if the expected/configured serial number is not found.</p><blockquote><p>This must be a string. So if your serial is a number only surround it with quotes <code>&#39;1000&#39;</code></p></blockquote></li><li><p><code>HA_PREFIX</code></p><p>A prefix to add to all the MQTT Discovered Home Assistant Sensors (default: SS).</p></li><li><p><code>MODBUS_ID</code></p><p>The Modbus Server ID is a number typically 1. Might be different in multi-inverter setups.</p></li><li><p><code>PORT</code></p><p>The port for RS485 communications, which can be either:</p><ul><li><p>A tcp:// port of a Modbus TCP server. Example:</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">PORT</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tcp://homeassistant.local:502</span></span>
<span class="line"></span></code></pre></div><p>This repository contains a mbusd TCP gateway add-on that can be used for this purpose.</p></li><li><p>A serial:// port. List of available ports under <em>Supervisor</em> -&gt; <em>System</em> tab -&gt; <em>Host</em> card <strong>â‹®</strong> -&gt; <em>Hardware</em></p><p>Example:</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">PORT</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">serial:///dev/ttyUSB0</span></span>
<span class="line"></span></code></pre></div><p><em>In order to assist with the name of your USB device, you can get a list of the current devices by inspecting the <code>DEBUG_DEVICE</code> options (located at the bottom of you config)</em></p></li><li><p>A RFC2217 compatible port (e.g. <code>tcp://homeassistant.local:6610</code>)</p></li></ul></li></ul><h2 id="sensors" tabindex="-1">Sensors <a class="header-anchor" href="#sensors" aria-label="Permalink to &quot;Sensors&quot;">â€‹</a></h2><p>The <code>SENSOR_DEFINITION</code> option allows you to select between <code>single-phase</code> and <code>three-phase</code> sensor definitions.</p><p>The <code>SENSORS</code> accepts a list of sensors to poll. Refer to the <a href="./definitions">single</a> and <a href="./definitions3ph">three</a> docs</p><p><s>The <code>SENSORS_FIRST_INVERTER</code> accepts a list of sensors that will only be applied to the first inverter</s></p><h2 id="home-assistant-discovery-options" tabindex="-1">Home Assistant Discovery options <a class="header-anchor" href="#home-assistant-discovery-options" aria-label="Permalink to &quot;Home Assistant Discovery options&quot;">â€‹</a></h2><p>The <code>MANUFACTURER</code> option allows you to rename the inverter manufacturer that will be displayed on the Home Assistant device. It does not have to be Sunsynk ðŸ˜‰</p><p>The <code>NUMBER_ENTITY_MODE</code> option allows you to change how read/write sensors which present as number entities in Home Assistant behave. The default display mode is <code>auto</code>. This setting controls how the number entity should be displayed in the UI. Can be set to <code>box</code> or <code>slider</code> to force a display mode.</p><h2 id="mqtt-settings" tabindex="-1">MQTT Settings <a class="header-anchor" href="#mqtt-settings" aria-label="Permalink to &quot;MQTT Settings&quot;">â€‹</a></h2><p>You will need a working MQTT server since all values will be sent via MQTT toward Home Assistant.</p><p>The default configuration assumes the Mosquitto broker add-on and you simply have to fill in your password.</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">MQTT_HOST</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">core-mosquitto</span></span>
<span class="line"><span style="color:#F07178;">MQTT_PORT</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1883</span></span>
<span class="line"><span style="color:#F07178;">MQTT_USERNAME</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hass</span></span>
<span class="line"><span style="color:#F07178;">MQTT_PASSWORD</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-secure-password</span></span>
<span class="line"></span></code></pre></div><h2 id="debug-options" tabindex="-1">Debug options <a class="header-anchor" href="#debug-options" aria-label="Permalink to &quot;Debug options&quot;">â€‹</a></h2><ul><li><p><code>DEBUG</code></p><p>The values received will continuously be printed to the add-on&#39;s log. This will confirm that you receive values.</p><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>0</code></td><td>No debug messages.</td></tr><tr><td><code>1</code></td><td>Messages for filter changes.</td></tr><tr><td><code>2</code></td><td>Debug level logging.</td></tr></tbody></table></li><li><p><code>DEBUG_DEVICE</code> allows you to select the USB port in the UI. It will only be used if <code>PORT</code> is empty. But you have to select something.</p></li></ul>`,24),i=[n];function l(r,p,c,d,h,u){return o(),s("div",null,i)}const b=e(a,[["render",l]]);export{y as __pageData,b as default};
